from flask import Flask, render_template_string
import pandas as pd
import unittest
import io
import logging

app = Flask(__name__)

# Set up logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# Load data
data = pd.read_csv('orders.csv')

# Compute the total revenue generated by the online store for each month in the dataset
def compute_monthly_revenue(data):
    data['order_date'] = pd.to_datetime(data['order_date'])
    data['revenue'] = data['product_price'] * data['quantity']
    monthly_revenue = data.groupby(data['order_date'].dt.to_period('M'))['revenue'].sum()
    monthly_revenue.index = monthly_revenue.index.astype(str)
    return monthly_revenue

# Compute the total revenue generated by each product in the dataset
def compute_product_revenue(data):
    data['revenue'] = data['product_price'] * data['quantity']
    return data.groupby('product_name')['revenue'].sum()

# Compute the total revenue generated by each customer in the dataset
def compute_customer_revenue(data):
    data['revenue'] = data['product_price'] * data['quantity']
    return data.groupby('customer_id')['revenue'].sum()

# Identify the top 10 customers by revenue generated
def compute_top_10_customers(data):
    customer_revenue = compute_customer_revenue(data)
    return customer_revenue.nlargest(10)

@app.route('/')
def home():
    data['revenue'] = data['product_price'] * data['quantity']
    html_table = data.drop(columns=['revenue']).to_html(classes='table table-striped', index=False)
    return render_template_string('''
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Infrastructure Engineer Task </title>
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    </head>
    <body>
        <div class="container mt-5">
            <h1 class="mb-4">Welcome to the Analysis API</h1>
            <h2>All Orders</h2>
            {{ table | safe }}
            <h3 class="mt-4">Analysis Links</h3>
            <ul>
                <li><a href="/monthly_revenue">Monthly Revenue</a></li>
                <li><a href="/product_revenue">Product Revenue</a></li>
                <li><a href="/customer_revenue">Customer Revenue</a></li>
                <li><a href="/top_10_customers">Top 10 Customers</a></li>
                <li><a href="/test_results">Test Results</a></li>
            </ul>
        </div>
    </body>
    </html>
    ''', table=html_table)

@app.route('/monthly_revenue', methods=['GET'])
def get_monthly_revenue():
    monthly_revenue = compute_monthly_revenue(data)
    return render_template_string('''
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Monthly Revenue</title>
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    </head>
    <body>
        <div class="container mt-5">
            <h1 class="mb-4">Monthly Revenue</h1>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Month</th>
                        <th>Revenue</th>
                    </tr>
                </thead>
                <tbody>
                    {% for key, value in data.items() %}
                    <tr>
                        <td>{{ key }}</td>
                        <td>{{ value }}</td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
            <a class="btn btn-primary mt-4" href="/">Back to Home</a>
        </div>
    </body>
    </html>
    ''', data=monthly_revenue.to_dict())

@app.route('/product_revenue', methods=['GET'])
def get_product_revenue():
    product_revenue = compute_product_revenue(data)
    return render_template_string('''
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Product Revenue</title>
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    </head>
    <body>
        <div class="container mt-5">
            <h1 class="mb-4">Product Revenue</h1>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Revenue</th>
                    </tr>
                </thead>
                <tbody>
                    {% for key, value in data.items() %}
                    <tr>
                        <td>{{ key }}</td>
                        <td>{{ value }}</td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
            <a class="btn btn-primary mt-4" href="/">Back to Home</a>
        </div>
    </body>
    </html>
    ''', data=product_revenue.to_dict())

@app.route('/customer_revenue', methods=['GET'])
def get_customer_revenue():
    customer_revenue = compute_customer_revenue(data)
    return render_template_string('''
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Customer Revenue</title>
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    </head>
    <body>
        <div class="container mt-5">
            <h1 class="mb-4">Customer Revenue</h1>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Customer ID</th>
                        <th>Revenue</th>
                    </tr>
                </thead>
                <tbody>
                    {% for key, value in data.items() %}
                    <tr>
                        <td>{{ key }}</td>
                        <td>{{ value }}</td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
            <a class="btn btn-primary mt-4" href="/">Back to Home</a>
        </div>
    </body>
    </html>
    ''', data=customer_revenue.to_dict())

@app.route('/top_10_customers', methods=['GET'])
def get_top_10_customers():
    top_10_customers = compute_top_10_customers(data)
    return render_template_string('''
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Top 10 Customers</title>
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    </head>
    <body>
        <div class="container mt-5">
            <h1 class="mb-4">Top 10 Customers by Revenue</h1>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Customer ID</th>
                        <th>Revenue</th>
                    </tr>
                </thead>
                <tbody>
                    {% for key, value in data.items() %}
                    <tr>
                        <td>{{ key }}</td>
                        <td>{{ value }}</td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
            <a class="btn btn-primary mt-4" href="/">Back to Home</a>
        </div>
    </body>
    </html>
    ''', data=top_10_customers.to_dict())

@app.route('/test_results', methods=['GET'])
def get_test_results():
    # Capture the output of the tests
    test_loader = unittest.TestLoader()
    test_suite = test_loader.discover(start_dir='.', pattern='test_analysis.py')
    
    stream = io.StringIO()
    runner = unittest.TextTestRunner(stream=stream)
    result = runner.run(test_suite)
    
    # Get the output and result
    test_output = stream.getvalue()
    test_success = result.wasSuccessful()
    
    # Log the test output
    logger.info(f"Test Results:\n{test_output}")
    
    return render_template_string('''
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Test Results</title>
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    </head>
    <body>
        <div class="container mt-5">
            <h1 class="mb-4">Test Results</h1>
            <pre>{{ test_output }}</pre>
            <p>Success: {{ test_success }}</p>
            <a class="btn btn-primary mt-4" href="/">Back to Home</a>
        </div>
    </body>
    </html>
    ''', test_output=test_output, test_success=test_success)

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5001)
